{"version":3,"file":"static/js/926.eff6c449.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Dialogs.jsx","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs__item\":\"Dialog_dialogs__item__JU9IK\",\"dialogs__link\":\"Dialog_dialogs__link__UTsTz\",\"dialogs__link_active\":\"Dialog_dialogs__link_active__NWPsJ\",\"dialogs__img\":\"Dialog_dialogs__img__Qy7gq\"};","import classes from \"./Dialog.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialog = (props)=>{\n    const path = `/dialogs/${props.user_id}`;\n    return(\n        <div className={classes.dialogs__item}>\n            <NavLink className={({isActive})=>(isActive ? `${classes.dialogs__link} ${classes.dialogs__link_active}` : classes.dialogs__link)} to={path}>\n                <div className={classes.dialogs__img}>\n                    <img src={props.user_img} alt={props.user}/>\n                </div>\n                <p>{props.user}</p>\n            </NavLink>\n        </div>\n    )\n};\n\nexport default Dialog;","// Создана для демонстрации реализации через хуки useSelector() и useDispatch()\n// Реализация через технологии connect, mapStateToProps, mapDispatchToProps в /components/Dialogs/DialogsContainer.jsx и /components/Dialogs/DialogsInContainer.jsx\n\n// Реализация с помощью Redux\nimport React from 'react';\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport classes from './Dialogs.module.css';\nimport {addMessageActionCreator} from \"../../redux/dialog-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst Dialogs = ()=>{\n    const users = useSelector(state => state.commonData.usersData);\n    const messages = useSelector(state => state.dialogsPage.messagesData);\n    const dispatch = useDispatch();\n\n\n    const usersElements = users.map((user)=>{\n            return <Dialog user={user.name} user_id={user.id} user_img={user.img} key={user.id}></Dialog>;\n        }\n    );\n\n    const messagesElements = messages.map((el)=>{\n        const user = users.find((user)=>{\n            return user.id === el.userId;\n        });\n        return <Message text={el.message} user={user.name} avatar={user.img} isCurrent={el.isCurrent} key={el.id}/>\n    });\n\n    const sendMessage = (formData)=>{\n        if (formData.newMessage.trim() !== '') {\n            dispatch(addMessageActionCreator(formData.newMessage));\n        }\n    };\n\n    return(\n        <div className={classes.dialogs}>\n            <div className={classes.dialogs__head}>\n                <h1>Dialogs</h1>\n            </div>\n            <div className={classes.dialogs__inner}>\n                <div className={classes.dialogs__list}>\n                    {usersElements}\n                </div>\n                <div className={classes.dialogs__messages}>\n                    <div className={classes.dialogs__messages_list}>\n                        {messagesElements}\n                    </div>\n\n                    <AddMessageFormRedux onSubmit={sendMessage} />\n\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form className={classes.field_wrap} onSubmit={props.handleSubmit(props.onSubmit)}>\n            <Field component={Textarea}\n                       name=\"newMessage\"\n                       placeholder=\"Enter your message...\"\n                       validate={[required, maxLength100]}/>\n            <button></button>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialog-new-message'\n})(AddMessageForm)\n\nexport default Dialogs;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\",\"message_current\":\"Message_message_current__nb+YB\",\"message__user\":\"Message_message__user__fC4PY\",\"message__img\":\"Message_message__img__6itM5\",\"message__name\":\"Message_message__name__onwzr\",\"message__content\":\"Message_message__content__GWqau\"};","import classes from \"./Message.module.css\";\n\nconst Message = (props)=>{\n    return(\n        <div className={props.isCurrent ? `${classes.message} ${classes.message_current}` : classes.message}>\n            <div className={classes.message__user}>\n                <div className={classes.message__img}>\n                    <img src={props.avatar} alt={props.user}/>\n                </div>\n            </div>\n            <div className={classes.message__content}>\n                <span className={classes.message__name}>{props.user}</span>\n                {props.text}\n            </div>\n        </div>\n    )\n};\n\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs__head\":\"Dialogs_dialogs__head__q7MO6\",\"dialogs__inner\":\"Dialogs_dialogs__inner__G9P9J\",\"dialogs__list\":\"Dialogs_dialogs__list__ZkKXL\",\"dialogs__messages\":\"Dialogs_dialogs__messages__DOZ-s\",\"field_wrap\":\"Dialogs_field_wrap__vwMZw\"};"],"names":["props","path","user_id","_jsx","className","classes","children","_jsxs","NavLink","_ref","isActive","to","src","user_img","alt","user","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","field_wrap","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","Dialogs","users","useSelector","state","commonData","usersData","messages","dialogsPage","messagesData","dispatch","useDispatch","usersElements","map","Dialog","id","img","messagesElements","el","find","userId","Message","text","message","avatar","isCurrent","dialogs","dialogs__head","dialogs__inner","dialogs__list","dialogs__messages","dialogs__messages_list","formData","newMessage","trim","addMessageActionCreator"],"sourceRoot":""}