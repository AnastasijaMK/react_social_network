{"version":3,"file":"static/js/659.2a660b2e.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Banner/Banner.module.css?ede8","components/Banner/Banner.jsx","components/Profile/Profile.module.css","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"Banner_banner__7KCUI\"};","import classes from './Banner.module.css';\n\nconst Banner = ()=>{\n  return(\n      <div className={classes.banner}>\n          <img src=\"https://yandex-images.clstorage.net/5nFH4F113/765da0PBAr/qLLvzCHlA0c1qA8itqd5-RKyxsMUMayQO_guczBJ44RULBKXH5z4CTyWpPDy8yOR5Mq-ch-h0btF2nVv6D4KeOrrr55nu0RHMLxEKPq9dekH_tuAAXO1lDyhInQJIZf9IBdp_DO_0CZxxf3xp7xs26mk2Gdv1f-2HbYPeuheeiO9hc7qA_RIYBSLRhW-qF73D_na3wNQlcQk8nw1EgmZ0xM-d_8fit0wRcb09ISeINGQgt0CY__hkzGGC0XBUlA-srfL3SbsaEY4ukg6krpe1Qvo2_45dLznKPZ0EiUokMk6IGnINpDLK07C5OCulRvDhqnoMkD547wumCxj519wDZOh6N0L1WJFBI9KEIWrS90O0uPiL3ev6zfGeCg1H5zGAy9n7xGf9CZN6tzsq5Aw-IyrwyJdwuWhHJoQdPN3aAaTmsr1HOF1XCG4aB6tpVz5I8_O4BFwkeQh31coHRuF-hEDZN41qMEpefzG85KAFNC6rdIyccvcmQ6SN3fqYF0IjobT5ivXf346vEMsopB60w7p_eMGU47sJe1lKScNocgmLlD6OajKGmzV8NawnST5tKjUI1ze87YVpCJo5XpnP7i37_US2VhhML5tFZ-jWP8g5PvRMH2pySTmcAsXK5PbKgtt9j-o9xBY7sXUs4wK_Iu69SBx_s6iOIQCcexZSDCwodbqOuxCeCSrdSK7n07vAdfLwA5ro_w-63cwJT2DziUFf90MrvMAWubyzaiSGtqWjdcfYPLNkSavDlLSfG4Lu4Ho_QHSTG0TtGU0ortKzj7f-sEwWpHsJ-VEJDISrsYDL27LKa_2EFzt-MWqpQTImJLRL0PR_ZQwlhFiyUN9O4iYyNgW10tnHIJpGoSMWs8ey9LnLUStwR_LVD01E7DwLRhM6g-a_Q56y9v7mKYR7pCR6Spkx_-aNpYyVOBbcCuOifLKNfVcXyeIVgyOgmTaOfr4yQJJl94Ay0QQDy0\" alt=\"\"/>\n      </div>\n  )\n};\n\nexport default Banner;","// extracted by mini-css-extract-plugin\nexport default {\"profile__page\":\"Profile_profile__page__YV5iq\"};","// extracted by mini-css-extract-plugin\nexport default {\"field_wrap\":\"MyPosts_field_wrap__aIjpd\",\"field_block\":\"MyPosts_field_block__G5jcW\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"item__img\":\"Post_item__img__Mc3-S\",\"item__like\":\"Post_item__like__Co1RH\"};","import classes from './Post.module.css';\n\nconst Post = (props)=>{\n    return(\n        <div className={classes.item}>\n            <div className={classes.item__img}>\n                <img src=\"https://i.pinimg.com/736x/e8/35/d9/e835d94e30b8779cb8bc732947db4448.jpg\" alt=\"\"/>\n            </div>\n            <div className={classes.item__text}>\n                {props.message}\n            </div>\n            <div className={classes.item__like}>\n                <span className={classes.item__like_count}>{props.likeCount}</span>\n                <button>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\" x=\"0\" y=\"0\" viewBox=\"0 0 391.837 391.837\">\n                        <g><path d=\"M285.257 35.528c58.743.286 106.294 47.836 106.58 106.58 0 107.624-195.918 214.204-195.918 214.204S0 248.165 0 142.108c0-58.862 47.717-106.58 106.58-106.58a105.534 105.534 0 0 1 89.339 48.065 106.578 106.578 0 0 1 89.338-48.065z\" fill=\"#ffffff\"></path></g>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    )\n};\n\nexport {Post};","// Реализация с помощью Redux\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classes from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\n\nconst MyPosts = React.memo(() => {\n    const posts = useSelector(state => state.profilePage.postsData);\n    const dispatch = useDispatch();\n\n\n    const postsElements = posts.map((post, index)=>{\n        return <Post key={index} message={post.text} likeCount={post.like}/>;\n    });\n\n    const addPost = (formData)=>{\n        if (formData.newPost.trim() !== '') {\n            dispatch(addPostActionCreator(formData.newPost));\n        }\n    };\n\n    return (\n        <div>\n            <h2>My posts</h2>\n            <AddNewPostFormRedux onSubmit={addPost}/>\n            <div className={classes.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) =>{\n    return (\n        <form className={classes.field_wrap} onSubmit={props.handleSubmit(props.onSubmit)}>\n            <Field component={Textarea}\n                   placeholder=\"What's new?\"\n                   name=\"newPost\"\n                   validate={[required, maxLength10]}/>\n            <button>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\" viewBox=\"0 0 512 512\" fill=\"none\">\n                    <g clip-path=\"url(#clip0_1608_2)\">\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M366.263 145.737L197.301 263.046L20.5754 204.13C8.23968 200.01 -0.0710129 188.436 -3.71852e-05 175.433C0.0718724 162.431 8.47782 150.928 20.8612 146.951L472.689 1.44658C483.429 -2.00601 495.217 0.827411 503.195 8.80564C511.173 16.7839 514.007 28.5714 510.553 39.3121L365.049 491.139C361.072 503.522 349.569 511.928 336.567 512C323.564 512.071 311.99 503.76 307.87 491.425L248.668 313.842L366.263 145.737Z\" fill=\"white\"/>\n                    </g>\n                    <defs>\n                        <clipPath id=\"clip0_1608_2\">\n                            <rect width=\"512\" height=\"512\" fill=\"white\"/>\n                        </clipPath>\n                    </defs>\n                </svg>\n            </button>\n        </form>\n    )\n};\n\nconst AddNewPostFormRedux = reduxForm({\n    form: 'profile-new-post'\n})(AddNewPostForm)\n\nexport {MyPosts};\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"ProfileInfo_user__3m88D\",\"user__icon\":\"ProfileInfo_user__icon__7rPtz\",\"user__info\":\"ProfileInfo_user__info__3mtA8\",\"user_status\":\"ProfileInfo_user_status__Si2yZ\",\"user_status__text\":\"ProfileInfo_user_status__text__RIFGU\",\"user_status__field\":\"ProfileInfo_user_status__field__4+4ZO\"};","import React, {useEffect, useState} from 'react';\nimport classes from \"./ProfileInfo.module.css\";\nimport {useDispatch} from \"react-redux\";\nimport {updateProfileStatusThunkCreator} from \"../../../redux/profile-reducer\";\n\nconst ProfileStatus = (props) => {\n    const [editStatusMode, setEditStatusMode] = useState(false);\n    const [currentStatus, setCurrentStatus] = useState(props.status);\n\n    const dispatch = useDispatch();\n\n    const activateEditStatusMode = () => {\n        setEditStatusMode(true);\n    };\n\n    const deactivateEditStatusMode = () => {\n        setEditStatusMode(false);\n        dispatch(updateProfileStatusThunkCreator(currentStatus));\n    };\n\n    const onStatusChange = (e) => {\n        setCurrentStatus(e.currentTarget.value);\n    };\n\n    useEffect(()=>{\n        setCurrentStatus(props.status);\n    }, [props.status]);\n\n    return (\n        <div className={classes.user_status}>\n            {!editStatusMode &&\n            <div className={classes.user_status__text}>\n                <span onDoubleClick={activateEditStatusMode}>{props.status || 'No status'}</span>\n            </div>\n            }\n            {editStatusMode &&\n            <div className={classes.user_status__field}>\n                <input type=\"text\"\n                       value={currentStatus}\n                       autoFocus\n                       onChange={onStatusChange}/>\n                <button onClick={deactivateEditStatusMode}></button>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus;","import classes from \"./ProfileInfo.module.css\";\nimport userPhoto from '../../../assets/img/channels4_profile.jpg';\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = (props)=>{\n    return(\n      <div className={classes.user}>\n          <div className={classes.user__icon}>\n              <img src={props.profile.photos.small === null ? userPhoto : props.profile.photos.small} alt={props.profile.fullName}/>\n          </div>\n          <div className={classes.user__info}>\n              <p className={classes.user__name}>{props.profile.fullName}</p>\n              <p>Date of Birth: 2 January</p>\n              <p>Location: Moscow</p>\n              <ProfileStatus status={props.status}/>\n          </div>\n      </div>\n    )\n};\n\nexport default ProfileInfo;","import classes from './Profile.module.css';\nimport {MyPosts} from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport Banner from \"../Banner/Banner\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useParams} from \"react-router\";\nimport React, {useEffect} from \"react\";\nimport {\n    setProfileFetchingStatusAC,\n    setProfileInfoAC,\n    getProfileDataThunkCreator, getProfileStatusThunkCreator\n} from \"../../redux/profile-reducer\";\nimport Loader from \"../common/Loader/Loader\";\n\nconst Profile = ()=>{\n    const myProfile = useSelector(state => state.profilePage.myProfile);\n    const profile = useSelector(state => state.profilePage.profile);\n    const status = useSelector(state => state.profilePage.status);\n    const profileFetchingStatus = useSelector(state => state.profilePage.profileIsFetching);\n    const dispatch = useDispatch();\n\n    let { profileId } = useParams();\n\n    useEffect(()=> {\n        dispatch(setProfileFetchingStatusAC(true));\n\n        if(!profileId) {\n            profileId = 31952;\n        }\n        dispatch(getProfileDataThunkCreator(profileId));\n        dispatch(getProfileStatusThunkCreator(profileId));\n\n\n        // if(!profileId) {\n        //     dispatch(setProfileInfoAC(myProfile));\n        //     dispatch(setProfileFetchingStatusAC(false));\n        // } else {\n        //     dispatch(getProfileDataThunkCreator(profileId));\n        // }\n    }, [profileId]);\n\n\n    return(\n        <div className={classes.profile__page}>\n            {profileFetchingStatus ?\n                <Loader parent='profile_loading'/> :\n                <>\n                    <Banner/>\n                    <ProfileInfo profile={profile}\n                                 status={status}/>\n                    <MyPosts />\n                </>\n            }\n        </div>\n    )\n};\n\nexport {Profile};\n\n\n// Исходная версия\n// import classes from './Profile.module.css';\n// import {MyPosts} from \"./MyPosts/MyPosts\";\n// import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n// import Banner from \"../Banner/Banner\";\n//\n// const Profile = (props)=>{\n//     return(\n//         <div className={classes.profile__page}>\n//             <Banner/>\n//             <ProfileInfo/>\n//             <MyPosts posts={props.data.postsData}\n//                      newPostText={props.data.newPostText}\n//                      dispatch={props.dispatch}\n//             />\n//         </div>\n//     )\n// };\n//\n// export {Profile};"],"names":["Banner","_jsx","className","classes","children","src","alt","Post","props","_jsxs","item","item__img","item__text","message","item__like","item__like_count","likeCount","xmlns","width","height","x","y","viewBox","d","fill","MyPosts","React","posts","useSelector","state","profilePage","postsData","dispatch","useDispatch","postsElements","map","post","index","text","like","AddNewPostFormRedux","onSubmit","formData","newPost","trim","addPostActionCreator","maxLength10","maxLengthCreator","reduxForm","form","field_wrap","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","id","editStatusMode","setEditStatusMode","useState","currentStatus","setCurrentStatus","status","useEffect","user_status","user_status__text","onDoubleClick","activateEditStatusMode","user_status__field","type","value","autoFocus","onChange","e","currentTarget","onClick","deactivateEditStatusMode","updateProfileStatusThunkCreator","user","user__icon","profile","photos","small","userPhoto","fullName","user__info","user__name","ProfileStatus","Profile","myProfile","profileFetchingStatus","profileIsFetching","profileId","useParams","setProfileFetchingStatusAC","getProfileDataThunkCreator","getProfileStatusThunkCreator","Loader","parent","_Fragment","ProfileInfo"],"sourceRoot":""}